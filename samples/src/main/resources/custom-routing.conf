// do not prefix by "http-gateway", because we are using a custom config loader
clients = [
  {
    client-id = "app-a"
    auth = {type = "key", value = "auth-a"}
    // custom parameter that reference the client specific routing
    customer-type = "customer-a"
  }
  {
    client-id = "app-b"
    auth = {type = "key", value = "auth-b"}
    // custom parameter that reference the client specific routing
    customer-type = "customer-b"
  }
]

// common services definition
base-services = [
  {
    service-id = "base-services"
    base-url = "http://localhost:4567"
    auth = {
      type = "basic"
      userId = "test-auth"
      password = "auth-password"
    }
    routes = [
      {route-id = "fetch-pets", method = "GET", path = "/pets"}
      {route-id = "fetch-pet", method = "GET", path = "/pets/{id}"}
      {route-id = "fetch-pet-friends", method = "GET", path = "/pets/{id}/friends"}
      {route-id = "add-pet", method = "POST", path = "/pets"}
    ]
  }
  {
    service-id = "base-other"
    base-url = "http://localhost:4567"
    routes = [
      {route-id = "hello-world", method = "GET", path = "/hello"}
    ]
  }
]

// custom routing definition
common-service-routes = [
  {route-id = "route-test", method = "GET", path = "/other-route/{id}"}
]
routing-per-customer = {
  // concat arrays for common services and sp√©cific services by customer with route overlaps
  customer-a.remote-services = ${base-services} [
    {
      service-id = "custom-routes-for-customer-a"
      base-url = "http://localhost:4567/customer-a"
      // concat arrays for common routing and custom one
      routes = ${common-service-routes} [
        {route-id = "custom-route-test", method = "GET", path = "/custom-route"}
      ]
    }
  ]
  customer-b.remote-services = ${base-services} [
    {
      service-id = "custom-routes-for-customer-b"
      base-url = "http://localhost:4567/customer-b"
      routes = ${common-service-routes}
    }
  ]
}
